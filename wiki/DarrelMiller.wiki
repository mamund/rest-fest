<table cellpadding="4">
<tr>
<td valign="top"><img src="http://www.gravatar.com/avatar/20cd0e7eb3c9eeeafb8ef081d3b516e0"/></td>
<td valign="top">
<p>Darrel Miller is CTO at Tavis Software.  Tavis Software is an ISV that targets a small vertical market in the world of Enterprise Resource Planning (ERP) software. </p>
<p>Darrel has been responsible for the architecture, design, development, deployment, support and maintenance of distributed business systems using ISAM databases, client/server databases, SOAP based services and most recently REST based systems.</p>
<p>Darrel has been writing software professionally for 17 years.  The last 3 years have been spent discovering the benefits of the REST.  His particular focus is on the use of REST to develop non-browser based line-of-business applications.</p>
</td>
<td valign="top">
</td>
</tr>
<tr>
<td></td>
<td>
  * Twitter: @darrel_miller
  * Blog: http://www.bizcoder.com
  * Company: http://www.tavis.ca
</td>
</tr>
</table>


===Proposed Talks===
|| _Title_ || *application/vnd.tavis.commandlist+xml - Partial updates via commands* ||
|| _Level_ || Intermediate, FiveInFive ||
|| _Abstract_ ||<p>PUT works great when you are updating files and images.  It is not so easy to use when you are updating shared resources stored in a relational database.  </p><p>This talk will introduce the notion of using a list of commands to perform partial and transient updates.  I cover issues like validation, progressive disclosure, error handling and undo/redo.</p> <p>I will also attempt to justify why I believe this is not just another way to tunnel RPC over HTTP.</p>||
|| _Slides_ || Not yet available ||

|| _Title_ || *Building hypermedia driven clients on Windows* ||
|| _Level_ || Intermediate, ExtendedTalk ||
|| _Abstract_ || <p>The architecture of the web brings many desirable properties to distributed applications.  However, web browsers are not always the best platform to deliver client functionality. </p><p>This talk discusses how to build rich clients as components of a RESTful  system to enable application developers to deliver high functioning clients that still benefit from the performance, scalability, fault tolerance and evolvability characteristics of web based systems. </p> <p>With the specific focus of delivering rich clients on the Windows platform, we will discuss topics such as deployment, service discovery, bookmarking, authentication, links, link relations, media-types, versioning, window management, caching of static resources and localization. </p><p>This is a code focused talk with examples in C# and will include a demo of a running production application that implements many of the discussed topics.  By no means is this talk intended to demonstrate the “right way”, this is “the way I have done it” and I fully expect the audience to tell me where they think I have gone astray. </p> ||
|| _Slides_ || Not yet available ||